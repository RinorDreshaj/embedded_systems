
Node0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000346  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000041  00000000  00000000  00000346  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008e0  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a8  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001dd  00000000  00000000  0000146c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000164c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000422  00000000  00000000  00001670  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001a92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	f7 d0       	rcall	.+494    	; 0x288 <main>
  9a:	29 c1       	rjmp	.+594    	; 0x2ee <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <UART_Init>:
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <UART_Init+0x6>
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
  a8:	9a 83       	std	Y+2, r25	; 0x02
  aa:	89 83       	std	Y+1, r24	; 0x01
  ac:	8a e2       	ldi	r24, 0x2A	; 42
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	fc 01       	movw	r30, r24
  b2:	20 81       	ld	r18, Z
  b4:	8a e2       	ldi	r24, 0x2A	; 42
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	28 6d       	ori	r18, 0xD8	; 216
  ba:	fc 01       	movw	r30, r24
  bc:	20 83       	st	Z, r18
  be:	85 e9       	ldi	r24, 0x95	; 149
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	fc 01       	movw	r30, r24
  c4:	20 81       	ld	r18, Z
  c6:	85 e9       	ldi	r24, 0x95	; 149
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	26 60       	ori	r18, 0x06	; 6
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	9a 81       	ldd	r25, Y+2	; 0x02
  d4:	29 2f       	mov	r18, r25
  d6:	33 27       	eor	r19, r19
  d8:	80 e9       	ldi	r24, 0x90	; 144
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	fc 01       	movw	r30, r24
  de:	20 83       	st	Z, r18
  e0:	89 e2       	ldi	r24, 0x29	; 41
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	29 81       	ldd	r18, Y+1	; 0x01
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18
  ea:	00 00       	nop
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <UART_DataAvailable>:
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	8b e2       	ldi	r24, 0x2B	; 43
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	fc 01       	movw	r30, r24
 104:	80 81       	ld	r24, Z
 106:	80 78       	andi	r24, 0x80	; 128
 108:	df 91       	pop	r29
 10a:	cf 91       	pop	r28
 10c:	08 95       	ret

0000010e <UART_Read>:
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	cd b7       	in	r28, 0x3d	; 61
 114:	de b7       	in	r29, 0x3e	; 62
 116:	8c e2       	ldi	r24, 0x2C	; 44
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	fc 01       	movw	r30, r24
 11c:	80 81       	ld	r24, Z
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <UART_ReadBlocking>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	00 00       	nop
 12e:	8b e2       	ldi	r24, 0x2B	; 43
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	fc 01       	movw	r30, r24
 134:	80 81       	ld	r24, Z
 136:	88 23       	and	r24, r24
 138:	d4 f7       	brge	.-12     	; 0x12e <UART_ReadBlocking+0xa>
 13a:	8c e2       	ldi	r24, 0x2C	; 44
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	fc 01       	movw	r30, r24
 140:	80 81       	ld	r24, Z
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <UART_Write>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	0f 92       	push	r0
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	89 83       	std	Y+1, r24	; 0x01
 154:	00 00       	nop
 156:	8c e2       	ldi	r24, 0x2C	; 44
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	29 81       	ldd	r18, Y+1	; 0x01
 15c:	fc 01       	movw	r30, r24
 15e:	20 83       	st	Z, r18
 160:	00 00       	nop
 162:	0f 90       	pop	r0
 164:	df 91       	pop	r29
 166:	cf 91       	pop	r28
 168:	08 95       	ret

0000016a <UART_PC_Init>:
 16a:	cf 93       	push	r28
 16c:	df 93       	push	r29
 16e:	00 d0       	rcall	.+0      	; 0x170 <UART_PC_Init+0x6>
 170:	00 d0       	rcall	.+0      	; 0x172 <UART_PC_Init+0x8>
 172:	00 d0       	rcall	.+0      	; 0x174 <UART_PC_Init+0xa>
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	9e 83       	std	Y+6, r25	; 0x06
 17a:	8d 83       	std	Y+5, r24	; 0x05
 17c:	8a e9       	ldi	r24, 0x9A	; 154
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	28 e1       	ldi	r18, 0x18	; 24
 182:	fc 01       	movw	r30, r24
 184:	20 83       	st	Z, r18
 186:	8d e9       	ldi	r24, 0x9D	; 157
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	26 e0       	ldi	r18, 0x06	; 6
 18c:	fc 01       	movw	r30, r24
 18e:	20 83       	st	Z, r18
 190:	8d 81       	ldd	r24, Y+5	; 0x05
 192:	9e 81       	ldd	r25, Y+6	; 0x06
 194:	cc 01       	movw	r24, r24
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	aa 1f       	adc	r26, r26
 1a0:	bb 1f       	adc	r27, r27
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	aa 1f       	adc	r26, r26
 1a8:	bb 1f       	adc	r27, r27
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	aa 1f       	adc	r26, r26
 1b0:	bb 1f       	adc	r27, r27
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	aa 1f       	adc	r26, r26
 1b8:	bb 1f       	adc	r27, r27
 1ba:	9c 01       	movw	r18, r24
 1bc:	ad 01       	movw	r20, r26
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	a1 ee       	ldi	r26, 0xE1	; 225
 1c4:	b0 e0       	ldi	r27, 0x00	; 0
 1c6:	bc 01       	movw	r22, r24
 1c8:	cd 01       	movw	r24, r26
 1ca:	6f d0       	rcall	.+222    	; 0x2aa <__udivmodsi4>
 1cc:	da 01       	movw	r26, r20
 1ce:	c9 01       	movw	r24, r18
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	a1 09       	sbc	r26, r1
 1d4:	b1 09       	sbc	r27, r1
 1d6:	89 83       	std	Y+1, r24	; 0x01
 1d8:	9a 83       	std	Y+2, r25	; 0x02
 1da:	ab 83       	std	Y+3, r26	; 0x03
 1dc:	bc 83       	std	Y+4, r27	; 0x04
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	9a 81       	ldd	r25, Y+2	; 0x02
 1e2:	ab 81       	ldd	r26, Y+3	; 0x03
 1e4:	bc 81       	ldd	r27, Y+4	; 0x04
 1e6:	89 2f       	mov	r24, r25
 1e8:	9a 2f       	mov	r25, r26
 1ea:	ab 2f       	mov	r26, r27
 1ec:	bb 27       	eor	r27, r27
 1ee:	28 e9       	ldi	r18, 0x98	; 152
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	f9 01       	movw	r30, r18
 1f4:	80 83       	st	Z, r24
 1f6:	89 e9       	ldi	r24, 0x99	; 153
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	29 81       	ldd	r18, Y+1	; 0x01
 1fc:	fc 01       	movw	r30, r24
 1fe:	20 83       	st	Z, r18
 200:	00 00       	nop
 202:	26 96       	adiw	r28, 0x06	; 6
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	de bf       	out	0x3e, r29	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	cd bf       	out	0x3d, r28	; 61
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	08 95       	ret

00000214 <UART_PC_DataAvailable>:
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	cd b7       	in	r28, 0x3d	; 61
 21a:	de b7       	in	r29, 0x3e	; 62
 21c:	8b e9       	ldi	r24, 0x9B	; 155
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	fc 01       	movw	r30, r24
 222:	80 81       	ld	r24, Z
 224:	80 78       	andi	r24, 0x80	; 128
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	08 95       	ret

0000022c <UART_PC_Read>:
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	cd b7       	in	r28, 0x3d	; 61
 232:	de b7       	in	r29, 0x3e	; 62
 234:	8c e9       	ldi	r24, 0x9C	; 156
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	fc 01       	movw	r30, r24
 23a:	80 81       	ld	r24, Z
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <UART_PC_ReadBlocking>:
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
 24a:	00 00       	nop
 24c:	8b e9       	ldi	r24, 0x9B	; 155
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	fc 01       	movw	r30, r24
 252:	80 81       	ld	r24, Z
 254:	88 23       	and	r24, r24
 256:	d4 f7       	brge	.-12     	; 0x24c <UART_PC_ReadBlocking+0xa>
 258:	8c e9       	ldi	r24, 0x9C	; 156
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	fc 01       	movw	r30, r24
 25e:	80 81       	ld	r24, Z
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	08 95       	ret

00000266 <UART_PC_Write>:
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	0f 92       	push	r0
 26c:	cd b7       	in	r28, 0x3d	; 61
 26e:	de b7       	in	r29, 0x3e	; 62
 270:	89 83       	std	Y+1, r24	; 0x01
 272:	00 00       	nop
 274:	8c e9       	ldi	r24, 0x9C	; 156
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	29 81       	ldd	r18, Y+1	; 0x01
 27a:	fc 01       	movw	r30, r24
 27c:	20 83       	st	Z, r18
 27e:	00 00       	nop
 280:	0f 90       	pop	r0
 282:	df 91       	pop	r29
 284:	cf 91       	pop	r28
 286:	08 95       	ret

00000288 <main>:
#define		FILED_LUMINESCENCE_SENSOR	1
#define		FILED_TEMPERATURE_SENSOR	3

int main(void)
{
	UART_Init(9600);
 288:	80 e8       	ldi	r24, 0x80	; 128
 28a:	95 e2       	ldi	r25, 0x25	; 37
 28c:	08 df       	rcall	.-496    	; 0x9e <UART_Init>
	UART_PC_Init(9600);
 28e:	80 e8       	ldi	r24, 0x80	; 128
 290:	95 e2       	ldi	r25, 0x25	; 37
	
	unsigned long int pollDelay = 0;
	
    while (1) 
    {
		if(UART_DataAvailable())
 292:	6b df       	rcall	.-298    	; 0x16a <UART_PC_Init>
 294:	30 df       	rcall	.-416    	; 0xf6 <UART_DataAvailable>
			UART_PC_Write(UART_Read());
 296:	88 23       	and	r24, r24
 298:	11 f0       	breq	.+4      	; 0x29e <main+0x16>
 29a:	39 df       	rcall	.-398    	; 0x10e <UART_Read>
			
		if(UART_PC_DataAvailable())
 29c:	e4 df       	rcall	.-56     	; 0x266 <UART_PC_Write>
 29e:	ba df       	rcall	.-140    	; 0x214 <UART_PC_DataAvailable>
 2a0:	88 23       	and	r24, r24
 2a2:	c1 f3       	breq	.-16     	; 0x294 <main+0xc>
			UART_Write(UART_PC_Read());
 2a4:	c3 df       	rcall	.-122    	; 0x22c <UART_PC_Read>
 2a6:	50 df       	rcall	.-352    	; 0x148 <UART_Write>
 2a8:	f5 cf       	rjmp	.-22     	; 0x294 <main+0xc>

000002aa <__udivmodsi4>:
 2aa:	a1 e2       	ldi	r26, 0x21	; 33
 2ac:	1a 2e       	mov	r1, r26
 2ae:	aa 1b       	sub	r26, r26
 2b0:	bb 1b       	sub	r27, r27
 2b2:	fd 01       	movw	r30, r26
 2b4:	0d c0       	rjmp	.+26     	; 0x2d0 <__udivmodsi4_ep>

000002b6 <__udivmodsi4_loop>:
 2b6:	aa 1f       	adc	r26, r26
 2b8:	bb 1f       	adc	r27, r27
 2ba:	ee 1f       	adc	r30, r30
 2bc:	ff 1f       	adc	r31, r31
 2be:	a2 17       	cp	r26, r18
 2c0:	b3 07       	cpc	r27, r19
 2c2:	e4 07       	cpc	r30, r20
 2c4:	f5 07       	cpc	r31, r21
 2c6:	20 f0       	brcs	.+8      	; 0x2d0 <__udivmodsi4_ep>
 2c8:	a2 1b       	sub	r26, r18
 2ca:	b3 0b       	sbc	r27, r19
 2cc:	e4 0b       	sbc	r30, r20
 2ce:	f5 0b       	sbc	r31, r21

000002d0 <__udivmodsi4_ep>:
 2d0:	66 1f       	adc	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	1a 94       	dec	r1
 2da:	69 f7       	brne	.-38     	; 0x2b6 <__udivmodsi4_loop>
 2dc:	60 95       	com	r22
 2de:	70 95       	com	r23
 2e0:	80 95       	com	r24
 2e2:	90 95       	com	r25
 2e4:	9b 01       	movw	r18, r22
 2e6:	ac 01       	movw	r20, r24
 2e8:	bd 01       	movw	r22, r26
 2ea:	cf 01       	movw	r24, r30
 2ec:	08 95       	ret

000002ee <_exit>:
 2ee:	f8 94       	cli

000002f0 <__stop_program>:
 2f0:	ff cf       	rjmp	.-2      	; 0x2f0 <__stop_program>
